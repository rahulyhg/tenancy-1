version: 2

references:
    mysql_environment: &mysql_environment
        - MYSQL_DATABASE: testing
        - MYSQL_USER: testing
        - MYSQL_PASSWORD: testing
        - MYSQL_ALLOW_EMPTY_PASSWORD: yes
        - MYSQL_ROOT_HOST: "%"
    mysql: &mysql
        image: mysql:latest
        entrypoint: ['/entrypoint.sh', '--default-authentication-plugin=mysql_native_password']
        name: mysql
        environment: *mysql_environment
    environment: &environment
        - TENANCY_DB: testing
        - TENANCY_USERNAME: testing
        - TENANCY_PASSWORD: testing
        - TENANCY_HOST: mysql
        - APP_KEY: deela5kinohw0haekoothahSh8eexach

jobs:
    "php-7.2":
        docker:
            - image: php:7.2
              environment: *environment
            - *mysql
        working_directory: ~/repo
        steps:
            - checkout
            - restore_cache:
                  keys:
                      - composer-7.2-{{ checksum "composer.json" }}
            - run: apt-get -yqq update
            - run: apt-get -yqq install git unzip zip libpq-dev mysql-client libpng-dev
            - run: docker-php-ext-install pdo_mysql gd
            - run: curl -sS https://getcomposer.org/installer | php
            - run: chmod +x composer.phar
            - run: mv composer.phar /usr/local/bin/composer
            - run: composer config -g github-oauth.github.com $GITHUB_TOKEN
            - run: composer install -n --prefer-dist --no-progress -o
            - save_cache:
                  key: composer-7.2-{{ checksum "composer.json" }}
                  paths:
                      - vendor/
            - run:
                  name: Wait for other docker instances to be up
                  command: sleep 10
            - run: mysql --host=mysql -e "grant all privileges on *.* to 'testing'@'%' with grant option;"
            - run: ./vendor/bin/phpunit
            - persist_to_workspace:
                  root: ./
                  paths:
                      - vendor
    "php-7.3":
        docker:
            - image: php:7.3
              environment: *environment
            - *mysql
        working_directory: ~/repo
        steps:
            - checkout
            - restore_cache:
                  keys:
                      - composer-7.3-{{ checksum "composer.json" }}
            - run: apt-get -yqq update
            - run: apt-get -yqq install git unzip zip libpq-dev mysql-client libpng-dev
            - run: docker-php-ext-install pdo_mysql gd
            - run: curl -sS https://getcomposer.org/installer | php
            - run: chmod +x composer.phar
            - run: mv composer.phar /usr/local/bin/composer
            - run: composer config -g github-oauth.github.com $GITHUB_TOKEN
            - run: composer install -n --prefer-dist --no-progress -o
            - save_cache:
                  key: composer-7.3-{{ checksum "composer.json" }}
                  paths:
                      - vendor/
            - run:
                  name: Wait for other docker instances to be up
                  command: sleep 10
            - run: mysql --host=mysql -e "grant all privileges on *.* to 'testing'@'%' with grant option;"
            - run: ./vendor/bin/phpunit

    phpcs:
        docker:
            - image: php:7.2
        working_directory: ~/repo
        steps:
            - checkout
            - attach_workspace:
                  at: ./
            - run: ./vendor/bin/phpcs

    coverage:
        docker:
            - image: php:7.2
        working_directory: ~/repo
        steps:
            - checkout
            - attach_workspace:
                  at: ./
            - run: pecl install xdebug
            - run: docker-php-ext-enable xdebug
            - run: ./vendor/bin/phpunit --coverage-clover=coverage.xml
            - run: bash <(curl -s https://codecov.io/bash)

    subsplit:
        docker:
            - image: php:7.2
        working_directory: ~/repo
        steps:
            - checkout
            - run: apt-get -yqq update
            - run: apt-get -yqq install git
            - run: mkdir ~/.ssh && ssh-keyscan github.com >> ~/.ssh/known_hosts
            - run: git clone git@github.com:dflydev/git-subsplit.git ~/subsplit
            - run: cp ~/subsplit/git-subsplit.sh "$(git --exec-path)"/git-subsplit
            - run: bash build/tenancy-split.sh

workflows:
    version: 2
    test:
        jobs:
            - "php-7.2"
            - "php-7.3"
            - phpcs:
                  requires:
                      - "php-7.2"
                      - "php-7.3"
            - coverage:
                  requires:
                      - "php-7.2"
                      - "php-7.3"
            - subsplit:
                  requires:
                      - phpcs
                      - coverage
                  filters:
                      branches:
                          only:
                              - master
